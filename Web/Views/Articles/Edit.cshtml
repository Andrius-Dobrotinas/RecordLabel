@using RecordLabel.Catalogue
@model Article

@System.Web.Optimization.Styles.Render("~/Css/EditWithImages")
@System.Web.Optimization.Scripts.Render("~/Js/Articles/Edit")

@{
    string action = (ViewContext.RouteData.Values["action"] as string)?.ToUpperInvariant();
    ViewBag.Title = action;
}

<h2>@action</h2>

@using (Html.BeginForm(action, "Articles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@ViewBag.ItemType</h4>
        <hr />
        @Html.ValidationSummary(false, String.Empty, new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div>
            @Html.EditorForEnumBasedCollection(model => model.Titles.Collection, localization => localization.Language, localization => localization.Text, new EnumBasedCollections.CssClasses("form-group", "control-label col-md-2", "col-md-10", "form-control"))
        </div>

        <div>
            @Html.EditorForEnumBasedCollection(model => model.Localization.Collection, localization => localization.Language, localization => localization.Text, new EnumBasedCollections.CssClasses("form-group", "control-label col-md-2", "col-md-10", "form-control rich-text"))
        </div>
        <div class="form-group">
            @Html.EditorFor(model => model.Attributes, null, String.Empty)
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">References</label>
            <div class="col-md-10">
                @Html.ModalOpenButton("ReferencesModal", "Edit References")
            </div>
        </div>

        <div>
            @{
                MvcHtmlString refEditor = Html.EditorForASet<Article, ReferenceSet, Reference>(model => model.References, "ModelReferences");
                MvcHtmlString addRefBtn = Html.ButtonForModal("Add Reference", null, "addReferenceBtn");
                @Html.ModalDialog("ReferencesModal", refEditor, "References", addRefBtn);
            }
        </div>

        <div class="form-group">
            @Html.EditorFor(model => model.Images, null, String.Empty)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default", role = "button" })
            </div>
        </div>
    </div>
}
@Html.Partial("DeleteModelButton")

<div id="Templates">
    @(Html.EditorTemplateFor(model => model.References.Collection))
</div>
@Html.BackButtonBar("Back to Articles")